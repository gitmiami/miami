■Webブックを作ってみよう

たとえば、小説やレポートなど、ひと続きになった文書を順番に見てもらいたいというシチュエーションがあるかもしれません。
そんな時、今までだったらどうしていたでしょうか？
1ページごとに「前へ戻る」「次へ進む」などといったリンクをつけて、<a>タグの管理をしていたのではないでしょうか。しかし、そのような作業は手間がかかるばかりではなく、単純ですが煩雑な操作であるため、間違いも発生するものでした。特に、後からページとページとの間に挿入したいようなコンテンツが大量に発生したりすると、もう混乱してわけがわからなくなってしまいます。
ですが、もう心配いりません。
このような一連のコンテンツをひとつのファイルで管理し、自動的に前後ページへのリンクを生成してくれる、そんなスクリプトを紹介しましょう。

●ポイント
　ここでは、Content Linkingコンポーネントを利用します。
　Content Linkingコンポーネントは、あらかじめ定められた順番に従って一連のコンテンツ情報（URLとページの詳細説明）を管理します。たとえば、「a.aspの次はb.asp」というように、相対的、かつ動的にコンテンツを追跡してくれるので、サイトの開発者はあらかじめコンテンツの並びだけを設定しておけばよいことになります。
　また、そうなると、「Prev」「Next」などのリンクを配置した「ナビゲーションバー」は、同じ記述の繰り返しということになります。同じ記述を毎回おこなうのは、あまりに時間の無駄というものですので、これもひとつのファイルにまとめてしまい、SSI（Server Side Include）というしくみで後から各ページに挿入することにしましょう。

●サンプル
□chapX-X.asp
1	<html>
2	<head>
3	<title>序章：老樹の城砦1</title>
4	</head>
5	<body>
　…本文省略…
6	<center>
7	<!-- #Include file="bar.asp" -->
#　SSI（Server Side Include）のInclude命令を利用して、インクルードファイルbar.aspの内容をこの部分に挿入します。
#　bar.aspは、単純にchapX-X.aspの該当個所に挿入されるだけですので、スクリプトも通常どおり記述します。インクルード（挿入）ファイルだからといって、なにも気にすることはありません。
8	</center>
9	</body>
10	</html>

●TIPS
△SSI（Server Side Include）
　SSIは、サーバへの擬似的な命令をファイルに埋め込むしくみです。
　通常はHTMLファイル内でしか使用することができませんが（この場合、拡張子を「.shtml」とします）、#INCLUDE擬似命令だけはASPファイルにも適用できます。
　INCLUDE擬似命令の他にも、日付やファイルサイズなどの書式を設定する#CONFIG命令や外部コマンドを実行する#EXEC命令、最終更新日を取得する#FLASTMOD命令などがありますが、その機能の多くはASPの各機能で代替できるので、ほとんど使用することはありません。
