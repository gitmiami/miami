■ドキュメント情報を一覧表示してみよう

自分の情報を手軽に公開したい。
Webにおける元々の目的は、この点にあったはずです。
もちろん、単純に公開だけすればよいというのであれば、<a>タグで各種ドキュメントにリンクを張ればよいのですが、往々にして、ドキュメント名だけでは内容がわかりにくいことが多いものです。適当に見当をつけてファイルをダウンロードしてみたものの、期待していたものとはまったく的外れで、がっかりしたり腹立たしかったりという経験も多いのではないでしょうか？　また、これによって重要な情報が埋もれてしまうのでは、せっかくの宝も持ち腐れというものです。
そんな不満に答えて、この項では、ドキュメントのプロパティ情報を読み出し、ドキュメント本体をダウンロードしなくても、内容をあらかじめ把握できる手法を紹介します。

●ポイント
　自分の欲しい情報に、いかに簡単に辿りつくか、それは永遠の課題かもしれません。従来は、本当にファイル名やサイズ、作成年月日などで検索するか、もしくはファイル全文をキーワード検索するくらいしかできませんでしたが、前者はきわめて荒い検索しかできませんし、後者も処理負荷を考えれば、なかなか実用に耐えられるものではありませんでした。
　しかし、Windows2000では、各ファイルごとに拡張プロパティの情報を持っています。
　エクスプローラなどから各ファイルを右クリックして［プロパティ］を開き、［概要］タブに切り替えてみましょう。以下のようなプロパティシートが表示されるはずです。
　本サンプルでは、ここで設定されたファイルごとの詳細な各プロパティ情報を読み取り、一覧表示します。読み取りロジックとしてはきわめてシンプルなものなので、今までの内容の復習のつもりで全体を見渡してみてください。

●サンプル
□docProp.asp
1	<%@Language="VBScript" %>
2	<html>
3	<head>
4	<title>ドキュメント情報の表示</title>
5	</head>
6	<body>
7	<h1>ドキュメント情報一覧</h1>
8	<table border="1">
9	<tr>
10	　<th>ファイル名</th><th>タイトル</th><th>表題</th>
11	　<th>作者</th><th>分類</th><th>備考</th>
12	</tr>
13	<%
14	Set objShl=Server.CreateObject("Shell.Application")
#　Shell.Applicationオブジェクトを生成します。
15	Set objFld=objShl.NameSpace(Server.MapPath("./doc"))
#　NameSpaceメソッドは、引数に指定されたフォルダを示すFolderオブジェクトを返します。
16	Set clnFls=objFld.Items
#　Folderオブジェクト配下に含まれるファイル群をFilesコレクションとして返します。
17	For Each objFl In clnFls
18	%>
19	<tr>
20	　<td nowrap><%=objFl.Name %></td>
21	　<td nowrap><%=objFl.ExtendedProperty("Title") %></td>
22	　<td nowrap><%=objFl.ExtendedProperty("Subject") %></td>
23	　<td nowrap><%=objFl.ExtendedProperty("Author") %></td>
24	　<td nowrap><%=objFl.ExtendedProperty("Category") %></td>
25	　<td nowrap><%=objFl.ExtendedProperty("Comment") %></td>
26	</tr>
27	<%
28	Next
#　Filesコレクションの中身を、For Eachステートメントで順に読み出していきます。
#　ExtendedPropertyメソッドは、引数で指定された拡張プロパティ情報を取得します。
29	%>
30	</table>
31	</body>
32	</html>
………/スクリプト………

●TIPS
△サンプル動作上の注意
　このサンプルは、Windows2000に実装されているコンポーネントを前提としています。WindowsNT4.0以前やWindows9X系のOSでは動作しませんので、注意してください。
